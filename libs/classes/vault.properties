# ======================================
# Vault
# ======================================
# configure the Vault endpoint with an URI. Takes precedence over host/port/scheme configuration
spring.cloud.vault.uri=https://localhost:8200
# setting the scheme to http will use plain HTTP. Supported schemes are http and https
spring.cloud.vault.scheme=https
# sets the hostname of the Vault host. The host name will be used for SSL certificate validation
spring.cloud.vault.host=localhost
# sets the Vault port
spring.cloud.vault.port=8200
# setting this value to TOKEN selects the Token authentication method
spring.cloud.vault.authentication=TOKEN
# sets the static token to use. If missing or empty, then an attempt will be made to retrieve a token from ~/.vault-token
spring.cloud.vault.token=${VAULT_TOKEN}
# Unknown property
#spring.cloud.vault.tls.enabled=true
spring.cloud.vault.kv.enabled=true
# sets the connection timeout in milliseconds
spring.cloud.vault.connection-timeout=5000
# sets the read timeout in milliseconds
spring.cloud.vault.read-timeout=15000
# Configure SSL only for Spring Cloud Vault Config when authenticating using SSL/TLS certificate
# Please note that configuring spring.cloud.vault.ssl.* can be only applied when either Apache Http Components or the OkHttp client is on your class-path.
#spring.cloud.vault.authentication: CERT
#spring.cloud.vault.ssl.key-store=${JENY_BNC_ACCOUNT_KEY_STORE_LOCATION}
#spring.cloud.vault.ssl.key-store-password=${JENY_BNC_ACCOUNT_KEY_STORE_PASSWORD}
#spring.cloud.vault.ssl.key-store-type=${JENY_BNC_ACCOUNT_KEY_STORE_TYPE}
#spring.cloud.vault.ssl.cert-auth-path=cert

#spring.cloud.vault.ssl.trust-store=${JAVA_HOME}/lib/security/cacerts
#spring.cloud.vault.ssl.trust-store-password=${JAVA_TRUST_STORE_PASSWORD}
# Since Java 9 , PKCS12 is the default format
#spring.cloud.vault.ssl.trust-store-type=JKS
#spring.cloud.vault.ssl.enabled-protocols=TLSv1.2,TLSv1.3
#spring.cloud.vault.ssl.enabled-cipher-suites=TLS_AES_128_GCM_SHA256

